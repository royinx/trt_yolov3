# FROM nvcr.io/nvidia/l4t-base:r32.4.4
# ARG BASE_IMAGE=nvcr.io/nvidia/l4t-pytorch:r32.4.4-pth1.6-py3
ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.4.4
FROM ${BASE_IMAGE}

# Install Python

ENV DEBIAN_FRONTEND=noninteractive
ENV SHELL /bin/bash

RUN apt-get update && apt-get install -y --no-install-recommends make g++
RUN apt-get update && \
    apt-get install -y \
    libsm6 \
    libxext6 \
    libxrender1 \
    libturbojpeg \
    libgl1-mesa-glx \
    python3-pip \
    python3-dev \
    cmake \
    libprotobuf-dev \
    protobuf-compiler \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# OpenCV: libsm6, libxext6, libxrender1
# ONNX: cmake libprotobuf-dev protobuf-compiler

RUN python3 -m pip install --no-cache-dir -U pip
RUN python3 -m pip install --no-cache-dir -U setuptools

COPY requirements_jetson.txt requirements.txt
RUN python3 -m pip install -r requirements.txt 
# ENV trt_version 7.2.1.6
# RUN wget -O TensorRT-${trt_version}.tar https://www.dropbox.com/s/4i9msuc7476ryph/TensorRT-${trt_version}.Ubuntu-18.04.x86_64-gnu.cuda-10.2.cudnn8.0.tar?dl=1 && \
# # RUN wget https://www.dropbox.com/s/4i9msuc7476ryph/TensorRT-7.2.1.6.Ubuntu-18.04.x86_64-gnu.cuda-10.2.cudnn8.0.tar?dl=1 && \
#     tar xvf TensorRT-${trt_version}.tar && \
#     cd TensorRT-${trt_version}/python && \
#     pip3 install tensorrt-${trt_version}-cp36-none-linux_x86_64.whl && \
#     cd ../graphsurgeon && \
#     pip3 install graphsurgeon-0.4.5-py2.py3-none-any.whl && \
#     cd ../onnx_graphsurgeon && \
#     pip3 install onnx_graphsurgeon-0.2.6-py2.py3-none-any.whl
    
WORKDIR /workshop

RUN wget -O yolov3.onnx https://www.dropbox.com/s/wg9w6s99z0abppx/yolov3.onnx?dl=1

COPY . .

